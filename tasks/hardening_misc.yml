---
- name: HARDENING | MISC | Disable core dumps for all users
  lineinfile:
    line: "*     hard   core    0"
    dest: /etc/security/limits.conf
    regexp: ^[\s]*\*[\s]+hard[\s]+core[\s]+([\d]+)
    state: present

- name: HARDENING | MISC | Filter out links from path directories
  stat:
    path: "{{ item }}"
  register: path_dirs
  loop: "{{ ansible_env['PATH'].split(':') }}"

- name: HARDENING | MISC | No group or other writable permissions on path
  file:
    path: "{{ item.stat.path }}"
    mode: "go-w"
    state: directory
  when: "item.stat.exists == true and item.stat.islnk == false"
  loop: "{{ path_dirs.results }}"

- name: HARDENING | MISC | Add legal banner
  copy:
    content: "Unauthorized access to this machine is prohibited.\n"
    dest: "{{ item }}"
  loop:
    - "/etc/issue"
    - "/etc/issue.net"

- name: HARDENING | MISC | Check for cloud-init.conf
  stat: 
    path: "/usr/lib/tmpfiles.d/cloud-init.conf"
  register: tmpfiles_cloud

# Found on CentOS 7.2 digital ocean image. Should be a nop if these don't exist
- name: HARDENING | MISC | Shared Library Permissions
  file:
    path: "{{ item }}"
    mode: "go-w"
    state: file
  loop:
    - "/usr/lib/tmpfiles.d/cloud-init.conf"
    - "/lib/tmpfiles.d/cloud-init.conf"
  when: tmpfiles_cloud.stat.exists

# TODO check if this file is created elsewhere (/etc/crontab, /etc/cron.daily, etc)
# Ubuntu/Debian creates a cron job in /etc/cron.daily
- name: HARDENING | MISC | Periodic run of AIDE via cron @ 04:05:00
  copy:
    content: "05 4 * * * root {{ path_bin_aide }} --check"
    dest: /etc/cron.d/aide
  when: ansible_os_family == "RedHat"

- name: HARDENING | MISC | Ensure AIDE is run via cron
  stat: 
    path: "/etc/cron.daily/aide"
  register: aide_cron
  when: ansible_os_family == "Debian"

- name: HARDENING | MISC | Check for AIDE cron job
  fail: 
    msg: "No daily cron job for running AIDE"
  when: ansible_os_family == "Debian" and aide_cron.stat.exists == false

# Necessary for Azure, this line seems to be missing in the 16.04 image.
# Absense of this line causes sudo to hang
# Since using backrefs, if no match -> no change. This prevents adding {{ ansible_hostname }} everytime
- name: HARDENING | MISC | Ensure hostname is in /etc/hosts
  lineinfile:
    dest: "/etc/hosts"
    regexp: (127\.0\.0\.1)\s+((?!.*\s*{{ ansible_hostname }}\s*.*).*)
    line: \1 \2 {{ ansible_hostname }}
    state: present
    backrefs: true
  when: ansible_virtualization_type != "docker"

# Since using backrefs, if no match -> no change. This prevents adding audit=1 everytime
- name: HARDENING | MISC | grub - Turn on auditing before auditd starts
  lineinfile:
    dest: "/etc/default/grub"
    regexp: (GRUB_CMDLINE_LINUX=)"((?!.*audit=1.*).*)"
    line: \1"\2 audit=1"
    state: present
    backrefs: true
  register: updated_grub_cfg
  when: ansible_virtualization_type != "docker"

- name: HARDENING | MISC | grub - Regenerate grub.cfg
  shell: "{{ grub_mkconfig }} -o {{ path_grub_cfg }}"
  when: updated_grub_cfg.changed
  tags:
    - skip_ansible_lint

- name: HARDENING | MISC | Grub permissions
  file:
    path: "{{ path_grub_cfg }}"
    mode: "0600"
    state: file
  when: ansible_virtualization_type != "docker"

- name: HARDENING | MISC | Disable prelinking
  lineinfile:
    dest: "/etc/sysconfig/prelink"
    regexp: ^PRELINKING=
    line: PRELINKING=no
    state: present
    create: true

- name: HARDENING | MISC | Restrict access to compilers
  file:
    path: "/usr/bin/as"
    mode: "go-rx"
    state: file
    follow: true
  when: ansible_distribution_major_version <= '7'
